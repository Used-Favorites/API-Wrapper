{
  "openapi": "3.0.0",
  "info": {
    "version": "0.0.1",
    "title": "API Documentation",
    "description": "API Documentation for the Express API."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "User routes",
      "path": "/user"
    },
    {
      "name": "Products",
      "description": "Products routes",
      "path": "/products"
    }
  ],
  "paths": {
    "/product/create": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Endpoint to create a new product.",
        "parameters": [
          {
            "name": "newProduct",
            "in": "body",
            "description": "Product information.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully."
          },
          "400": {
            "description": "Bad request."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/product/list": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Endpoint to list all products.",
        "responses": {
          "200": {
            "description": "Products listed successfully."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Endpoint to get a product by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product id."
          }
        ],
        "responses": {
          "200": {
            "description": "Product found."
          },
          "404": {
            "description": "Product not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "description": "Endpoint to update a product by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product id."
          },
          {
            "name": "updateProduct",
            "in": "body",
            "description": "Product information.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully."
          },
          "404": {
            "description": "Product not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "description": "Endpoint to delete a product by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product id."
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully."
          },
          "404": {
            "description": "Product not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/products/testAxios": {
      "get": {
        "tags": [
          "Python"
        ],
        "description": "Endpoint to test axios in python.",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/products/uploadImg": {
      "get": {
        "tags": [
          "Python"
        ],
        "description": "Endpoint to upload image.",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/products/uploadPy": {
      "post": {
        "tags": [
          "Python"
        ],
        "description": "Endpoint to upload python file.",
        "parameters": [
          {
            "name": "file",
            "in": "body",
            "description": "Python file",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/user/create": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint\r  para criar um novo usuário.",
        "parameters": [
          {
            "name": "newUser",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "jonhdoe@email.com"
                },
                "password": {
                  "type": "string",
                  "example": "123456"
                }
              },
              "required": [
                "name",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso."
          },
          "400": {
            "description": "Erro ao criar usuário."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/user/list": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint\r  para listar todos os usuários.",
        "responses": {
          "200": {
            "description": "Lista de usuários retornada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "array"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "email"
                      ]
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "array"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "email"
                      ]
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint\r  para listar um usuário pelo id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint\r  para atualizar um usuário pelo id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do usuário"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint\r  para deletar um usuário pelo id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do usuário"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint\r  para realizar login.",
        "parameters": [
          {
            "name": "login",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "jon@gamil.com"
                },
                "password": {
                  "type": "string",
                  "example": "123456"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login realizado com sucesso."
          },
          "400": {
            "description": "Erro ao realizar login."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint\r  para realizar logout.",
        "responses": {
          "200": {
            "description": "Logout realizado com sucesso."
          },
          "400": {
            "description": "Erro ao realizar logout."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "number"
                  }
                }
              },
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "email": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "number"
                  }
                }
              },
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "price": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "number"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "Product"
        }
      }
    }
  }
}