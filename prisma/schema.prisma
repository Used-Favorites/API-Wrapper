// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
 
}

generator dbml {
  provider = "prisma-dbml-generator"
  output= "./dbmll"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root@localhost:3307/prisma"
}

generator class {
    provider = "prisma-class-generator"
    output= "./gen"
}
model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String

  name       String
  andreessId Int?      @unique
  phone      String?
  andreess   Andreess? @relation(fields: [andreessId], references: [id])
  date_birth DateTime


  cart           Cart[]
  productsBought Products[] @relation("ProductBuyer")
  productsSold   Products[] @relation("ProductSeller")
}

model supplier {
  id       Int        @id @default(autoincrement())
  name     String
  email    String
  phone    String
  andreess Andreess[]
}

model Products {
  id         Int  @id @default(autoincrement())

  name        String
  price       Float
  promoPrice  Float?
  description String
  problemDescription String
  quality String
  image       String  @db.LongText 

  category     Category?   @relation(fields: [categoryId], references: [id])
  seller       User?       @relation("ProductSeller", fields: [sellerId], references: [id])
  buyer        User?       @relation("ProductBuyer", fields: [buyerId], references: [id])
  cart         Cart[]
  
  size       Float
  salePrice  Decimal
  repairCost Decimal
  finalPrice Decimal

  repaired Boolean

  lastModified      DateTime
  interestedParties Int
  brand             String
  model             String
  condition         String
  supplierId        Int
  categoryId Int?
  sellerId   Int?
  buyerId    Int?
        
}

model Andreess {
  id         Int       @id @default(autoincrement())
  street     String
  number     String
  city       String
  state      String
  cep        String
  supplier   supplier? @relation(fields: [supplierId], references: [id])
  User       User?
  supplierId Int?
}



model Category {
  id       Int        @id @default(autoincrement())
  name     String
  products Products[]
}

model Cart {
  id      Int        @id @default(autoincrement())
  userId  Int        @unique
  product Products[]
  user    User       @relation(fields: [userId], references: [id])
}



model Yolo {
  id      Int    @id @default(autoincrement())
  x       Int
  y       Int
  height  Float
  width   Float
  classes String
}

model YoloTraining {
  id      Int    @id @default(autoincrement())
  vectors String
}

model YoloImages {
  id          Int    @id @default(autoincrement())
  imageId     Int
  textToImage String
}
